//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace IQTools.TzWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IQMessagingSoap", Namespace="http://tempuri.org/")]
    public partial class IQMessaging : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSeveralMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMessageLogOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IQMessaging() {
            this.Url = global::IQTools.Properties.Settings.Default.IQTools_TzWebReference_IQMessaging;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event SendMessagesCompletedEventHandler SendMessagesCompleted;
        
        /// <remarks/>
        public event SendSeveralMessagesCompletedEventHandler SendSeveralMessagesCompleted;
        
        /// <remarks/>
        public event GetMessageLogCompletedEventHandler GetMessageLogCompleted;
        
        /// <remarks/>
        public event GetAllMessageLogCompletedEventHandler GetAllMessageLogCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMessage(string phoneNumber, string message) {
            object[] results = this.Invoke("SendMessage", new object[] {
                        phoneNumber,
                        message});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessageAsync(string phoneNumber, string message) {
            this.SendMessageAsync(phoneNumber, message, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(string phoneNumber, string message, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        phoneNumber,
                        message}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new SendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool[] SendMessages(string[] phoneNumbers, string message) {
            object[] results = this.Invoke("SendMessages", new object[] {
                        phoneNumbers,
                        message});
            return ((bool[])(results[0]));
        }
        
        /// <remarks/>
        public void SendMessagesAsync(string[] phoneNumbers, string message) {
            this.SendMessagesAsync(phoneNumbers, message, null);
        }
        
        /// <remarks/>
        public void SendMessagesAsync(string[] phoneNumbers, string message, object userState) {
            if ((this.SendMessagesOperationCompleted == null)) {
                this.SendMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessagesOperationCompleted);
            }
            this.InvokeAsync("SendMessages", new object[] {
                        phoneNumbers,
                        message}, this.SendMessagesOperationCompleted, userState);
        }
        
        private void OnSendMessagesOperationCompleted(object arg) {
            if ((this.SendMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessagesCompleted(this, new SendMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSeveralMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool[] SendSeveralMessages(string[] phoneNumbers, string[] messages) {
            object[] results = this.Invoke("SendSeveralMessages", new object[] {
                        phoneNumbers,
                        messages});
            return ((bool[])(results[0]));
        }
        
        /// <remarks/>
        public void SendSeveralMessagesAsync(string[] phoneNumbers, string[] messages) {
            this.SendSeveralMessagesAsync(phoneNumbers, messages, null);
        }
        
        /// <remarks/>
        public void SendSeveralMessagesAsync(string[] phoneNumbers, string[] messages, object userState) {
            if ((this.SendSeveralMessagesOperationCompleted == null)) {
                this.SendSeveralMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSeveralMessagesOperationCompleted);
            }
            this.InvokeAsync("SendSeveralMessages", new object[] {
                        phoneNumbers,
                        messages}, this.SendSeveralMessagesOperationCompleted, userState);
        }
        
        private void OnSendSeveralMessagesOperationCompleted(object arg) {
            if ((this.SendSeveralMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSeveralMessagesCompleted(this, new SendSeveralMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessagingLog[] GetMessageLog(string phoneNumber, MessageRequestType type, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetMessageLog", new object[] {
                        phoneNumber,
                        type,
                        startDate,
                        endDate});
            return ((MessagingLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageLogAsync(string phoneNumber, MessageRequestType type, System.DateTime startDate, System.DateTime endDate) {
            this.GetMessageLogAsync(phoneNumber, type, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetMessageLogAsync(string phoneNumber, MessageRequestType type, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetMessageLogOperationCompleted == null)) {
                this.GetMessageLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageLogOperationCompleted);
            }
            this.InvokeAsync("GetMessageLog", new object[] {
                        phoneNumber,
                        type,
                        startDate,
                        endDate}, this.GetMessageLogOperationCompleted, userState);
        }
        
        private void OnGetMessageLogOperationCompleted(object arg) {
            if ((this.GetMessageLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageLogCompleted(this, new GetMessageLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMessageLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessagingLog[] GetAllMessageLog(MessageRequestType type, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetAllMessageLog", new object[] {
                        type,
                        startDate,
                        endDate});
            return ((MessagingLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMessageLogAsync(MessageRequestType type, System.DateTime startDate, System.DateTime endDate) {
            this.GetAllMessageLogAsync(type, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetAllMessageLogAsync(MessageRequestType type, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetAllMessageLogOperationCompleted == null)) {
                this.GetAllMessageLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMessageLogOperationCompleted);
            }
            this.InvokeAsync("GetAllMessageLog", new object[] {
                        type,
                        startDate,
                        endDate}, this.GetAllMessageLogOperationCompleted, userState);
        }
        
        private void OnGetAllMessageLogOperationCompleted(object arg) {
            if ((this.GetAllMessageLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMessageLogCompleted(this, new GetAllMessageLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum MessageRequestType {
        
        /// <remarks/>
        RECEIVED_BY_USER,
        
        /// <remarks/>
        SEND_BY_USER,
        
        /// <remarks/>
        ALL_MESSAGES,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MessagingLog {
        
        private int messagingLogIdField;
        
        private string phoneNumberField;
        
        private string messageBodyField;
        
        private System.DateTime dateSendReceivedField;
        
        private bool isMessageSentToUserField;
        
        private OtherSystemUserNumber otherSystemUserNumberField;
        
        /// <remarks/>
        public int MessagingLogId {
            get {
                return this.messagingLogIdField;
            }
            set {
                this.messagingLogIdField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string MessageBody {
            get {
                return this.messageBodyField;
            }
            set {
                this.messageBodyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateSendReceived {
            get {
                return this.dateSendReceivedField;
            }
            set {
                this.dateSendReceivedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMessageSentToUser {
            get {
                return this.isMessageSentToUserField;
            }
            set {
                this.isMessageSentToUserField = value;
            }
        }
        
        /// <remarks/>
        public OtherSystemUserNumber OtherSystemUserNumber {
            get {
                return this.otherSystemUserNumberField;
            }
            set {
                this.otherSystemUserNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OtherSystemUserNumber {
        
        private string phoneNumberField;
        
        private MessagingLog[] messagingLogsField;
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public MessagingLog[] MessagingLogs {
            get {
                return this.messagingLogsField;
            }
            set {
                this.messagingLogsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SendMessageCompletedEventHandler(object sender, SendMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SendMessagesCompletedEventHandler(object sender, SendMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SendSeveralMessagesCompletedEventHandler(object sender, SendSeveralMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSeveralMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSeveralMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMessageLogCompletedEventHandler(object sender, GetMessageLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessagingLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessagingLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAllMessageLogCompletedEventHandler(object sender, GetAllMessageLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMessageLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMessageLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessagingLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessagingLog[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591